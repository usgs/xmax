apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = "com.isti.xmax.XMAX"
version = '2.2.0'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven {
        url "http://www.seis.sc.edu/software/maven2"
    }
}

dependencies {
    compile group: 'org.jfree', name: 'jfreechart', version: '1.0.+'
    compile group: 'org.jfree', name: 'jcommon', version: '1.0.+'
    compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.7'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.1.1'
    compile group: 'org.jdom', name: 'jdom', version: '1.1'
    compile group: 'edu.emory.mathcs', name: 'JTransforms', version: '2.4'
    compile group: 'log4j', name: 'log4j', version: '1.2.16'
    compile group: 'org.reflections', name: 'reflections', version: '0.9.10'
    

//seis.sc.edu maven dependencies
    compile group: 'edu.sc.seis', name: 'seisFile', version: '1.6.5'
//    compile group: 'edu.sc.seis', name: 'fissuresIDL', version: '1.0'
//    compile group: 'edu.sc.seis', name: 'fissuresUtil', version: '1.1.5'
//    compile group: 'edu.sc.seis', name: 'TauP', version: '2.1.2'
    compile group: 'edu.sc.seis', name: 'seedCodec', version: '1.0.11'
//    compile group: 'com.isti', name: 'jevalresp', version: '1.57'

    compile files('./lib/fissuresIDL-1.0.jar', './lib/fissuresUtil-1.0.19.jar', './lib/TauP-1.1.7.jar', './lib/JEvalResp.jar', './lib/ekit-1.4.jar', './lib/JavaSeed.jar')

    testCompile group: 'junit', name: 'junit', version: '4.+'
}



jar {
    /* Adds all dependent libraries*/
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes 'Implementation-Title': 'XMAX',
                   'Implementation-Version': version,
                   'Main-Class': mainClassName
    }
}

/*Turn off doclint since it is far too strict and breaks the javadoc everytime*/
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

task copyJar(type: Copy) {
    from jar
    into rootDir
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PRIVATE
}

